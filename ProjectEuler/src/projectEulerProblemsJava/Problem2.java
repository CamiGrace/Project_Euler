

package projectEulerProblemsJava;
import java.util.*;
public class Problem2 {

	public static void main(String[] args) {
		// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
		//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
		//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
		
		
		List <Integer> fibonacci = new ArrayList <>();
		int firstnumber = 0;
		int secondnumber = 1;
		int thirdnumber = 0;
		int sum = 0;
		
		while (thirdnumber< 4000000) {
			thirdnumber = ( firstnumber + secondnumber);
			if (thirdnumber<4000000) {
				fibonacci.add(thirdnumber);
			}
			firstnumber = secondnumber;
			secondnumber = thirdnumber;
		}
		System.out.println("Fibonacci numbers: " + fibonacci);
		
		for (int x = 0; x < fibonacci.size(); x++) {
			if (fibonacci.get(x) %2 == 0) {
				sum += fibonacci.get(x);
			}
		} System.out.println("Sum of the even Fibonacci numbers: " + sum);
		
	}

}
